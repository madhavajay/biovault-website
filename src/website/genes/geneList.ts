// Top 100 genes by ClinVar entries - most clinically significant
export const TOP_GENES = [
	'BRCA2',
	'TTN',
	'NF1',
	'BRCA1',
	'TTN-AS1',
	'ATM',
	'APC',
	'FBN1',
	'MSH6',
	'MSH2',
	'DMD',
	'PKD1',
	'MLH1',
	'SCN1A',
	'TSC2',
	'PALB2',
	'USH2A',
	'COL1A1',
	'LDLR',
	'C11orf65',
	'NEB',
	'PTEN',
	'CFTR',
	'RB1',
	'ABCA4',
	'TP53',
	'KMT2D',
	'PHEX',
	'CHEK2',
	'MYBPC3',
	'LOC102724058',
	'PKHD1',
	'COL4A5',
	'DICER1',
	'COL7A1',
	'PMS2',
	'CHD7',
	'ALMS1',
	'COL2A1',
	'LOC126862571',
	'TSC1',
	'PTCH1',
	'BRIP1',
	'DNAH5',
	'CDKL5',
	'IDS',
	'EYS',
	'COL3A1',
	'MECP2',
	'CDH1',
	'NSD1',
	'FANCA',
	'KCNH2',
	'VPS13B',
	'DSP',
	'SACS',
	'PAH',
	'COL4A3',
	'CEP290',
	'MFF-DT',
	'MEN1',
	'COL4A4',
	'ENG',
	'ANKRD11',
	'ADGRV1',
	'SPAST',
	'BMPR2',
	'RPGR',
	'DYSF',
	'LZTR1',
	'EXT1',
	'KCNQ2',
	'LAMA2',
	'ARID1B',
	'NIPBL',
	'MYO15A',
	'MYO7A',
	'POLE',
	'FLNC',
	'BARD1',
	'SPG11',
	'F8',
	'COL1A2',
	'DNAH11',
] as const

// Type for valid gene names
export type GeneName = (typeof TOP_GENES)[number]

// Check if a gene is in our supported list
export function isValidGene(gene: string): gene is GeneName {
	return TOP_GENES.includes(gene.toUpperCase() as GeneName)
}

// Get proper case for gene name
export function getProperGeneName(gene: string): GeneName | null {
	const upperGene = gene.toUpperCase()
	return TOP_GENES.find((g) => g === upperGene) || null
}
